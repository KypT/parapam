{:rename-macros {}, :renames {}, :use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes nil, :name main.js, :imports nil, :requires {async cljs.core.async, cljs.core.async cljs.core.async, sente taoensso.sente, taoensso.sente taoensso.sente}, :uses {<! cljs.core.async, chan cljs.core.async, >! cljs.core.async, cb-success? taoensso.sente, put! cljs.core.async}, :defs {_start-once {:name main.js/_start-once, :file "src/cljs/main/js.cljs", :line 79, :column 1, :end-line 79, :end-column 21, :meta {:file "/home/user/projects/parapam/src/cljs/main/js.cljs", :line 79, :column 10, :end-line 79, :end-column 21}}, -event-msg-handler {:name main.js/-event-msg-handler, :file "src/cljs/main/js.cljs", :line 24, :column 1, :end-line 24, :end-column 29, :doc "Multimethod to handle Sente `event-msg`s", :meta {:file "/home/user/projects/parapam/src/cljs/main/js.cljs", :line 24, :column 11, :end-line 24, :end-column 29, :doc "Multimethod to handle Sente `event-msg`s"}}, chsk-send! {:name main.js/chsk-send!, :file "src/cljs/main/js.cljs", :line 16, :column 3, :end-line 16, :end-column 18, :meta {:file "/home/user/projects/parapam/src/cljs/main/js.cljs", :line 16, :column 8, :end-line 16, :end-column 18}}, update-services-list {:protocol-inline nil, :meta {:file "/home/user/projects/parapam/src/cljs/main/js.cljs", :line 64, :column 9, :end-line 64, :end-column 29, :arglists (quote ([services]))}, :name main.js/update-services-list, :variadic false, :file "src/cljs/main/js.cljs", :end-column 29, :method-params ([services]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 64, :end-line 64, :max-fixed-arity 1, :fn-var true, :arglists (quote ([services]))}, start! {:protocol-inline nil, :meta {:file "/home/user/projects/parapam/src/cljs/main/js.cljs", :line 77, :column 7, :end-line 77, :end-column 13, :arglists (quote ([]))}, :name main.js/start!, :variadic false, :file "src/cljs/main/js.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, router_ {:name main.js/router_, :file "src/cljs/main/js.cljs", :line 69, :column 1, :end-line 69, :end-column 17, :meta {:file "/home/user/projects/parapam/src/cljs/main/js.cljs", :line 69, :column 10, :end-line 69, :end-column 17}}, event-msg-handler {:protocol-inline nil, :meta {:file "/home/user/projects/parapam/src/cljs/main/js.cljs", :line 29, :column 7, :end-line 29, :end-column 24, :arglists (quote ([{:as ev-msg, :keys [id ?data event]}])), :doc "Wraps `-event-msg-handler` with logging, error catching, etc."}, :name main.js/event-msg-handler, :variadic false, :file "src/cljs/main/js.cljs", :end-column 24, :method-params ([p__30309]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:as ev-msg, :keys [id ?data event]}])), :doc "Wraps `-event-msg-handler` with logging, error catching, etc."}, ->output! {:protocol-inline nil, :meta {:file "/home/user/projects/parapam/src/cljs/main/js.cljs", :line 20, :column 7, :end-line 20, :end-column 16, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name main.js/->output!, :variadic true, :file "src/cljs/main/js.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, ch-chsk {:name main.js/ch-chsk, :file "src/cljs/main/js.cljs", :line 15, :column 3, :end-line 15, :end-column 15, :meta {:file "/home/user/projects/parapam/src/cljs/main/js.cljs", :line 15, :column 8, :end-line 15, :end-column 15}}, chsk-state {:name main.js/chsk-state, :file "src/cljs/main/js.cljs", :line 17, :column 3, :end-line 17, :end-column 18, :meta {:file "/home/user/projects/parapam/src/cljs/main/js.cljs", :line 17, :column 8, :end-line 17, :end-column 18}}, start-router! {:protocol-inline nil, :meta {:file "/home/user/projects/parapam/src/cljs/main/js.cljs", :line 71, :column 7, :end-line 71, :end-column 20, :arglists (quote ([]))}, :name main.js/start-router!, :variadic false, :file "src/cljs/main/js.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, stop-router! {:protocol-inline nil, :meta {:file "/home/user/projects/parapam/src/cljs/main/js.cljs", :line 70, :column 8, :end-line 70, :end-column 20, :arglists (quote ([]))}, :name main.js/stop-router!, :variadic false, :file "src/cljs/main/js.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, patch-dom {:protocol-inline nil, :meta {:file "/home/user/projects/parapam/src/cljs/main/js.cljs", :line 60, :column 7, :end-line 60, :end-column 16, :arglists (quote ([node layout]))}, :name main.js/patch-dom, :variadic false, :file "src/cljs/main/js.cljs", :end-column 16, :method-params ([node layout]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 2, :fn-var true, :arglists (quote ([node layout]))}, chsk {:name main.js/chsk, :file "src/cljs/main/js.cljs", :line 14, :column 3, :end-line 14, :end-column 12, :meta {:file "/home/user/projects/parapam/src/cljs/main/js.cljs", :line 14, :column 8, :end-line 14, :end-column 12}}}, :require-macros {asyncm cljs.core.async.macros, cljs.core.async.macros cljs.core.async.macros, sente taoensso.sente, taoensso.sente taoensso.sente}, :cljs.analyzer/constants {:seen #{:chsk/recv :ch-recv :push/services :default :name :type :chsk/state :state :event :id :class :?data :chsk :send-fn :hierarchy :auto :chsk/handshake}, :order [:type :auto :chsk :ch-recv :send-fn :state :hierarchy :id :default :?data :event :chsk/state :chsk/recv :push/services :chsk/handshake :class :name]}, :doc nil}